% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hexagon_layer.R
\name{hexagon_layer}
\alias{hexagon_layer}
\alias{add_hexagon_layer}
\title{HexagonLayer}
\usage{
add_hexagon_layer(
  rdeck,
  ...,
  id = "HexagonLayer",
  data = data.frame(),
  visible = TRUE,
  pickable = FALSE,
  opacity = 1,
  position_format = "XYZ",
  color_format = "RGBA",
  auto_highlight = FALSE,
  highlight_color = "#00008080",
  color_domain = NULL,
  color_range = c("#ffffb2", "#fed976", "#feb24c", "#fd8d3c", "#f03b20", "#bd0026"),
  get_color_value = NULL,
  get_color_weight = 1,
  color_aggregation = "SUM",
  lower_percentile = 0,
  upper_percentile = 100,
  color_scale_type = "quantize",
  elevation_domain = NULL,
  elevation_range = c(0, 1000),
  get_elevation_value = NULL,
  get_elevation_weight = 1,
  elevation_aggregation = "SUM",
  elevation_lower_percentile = 0,
  elevation_upper_percentile = 100,
  elevation_scale = 1,
  elevation_scale_type = "linear",
  radius = 1000,
  coverage = 1,
  extruded = FALSE,
  hexagon_aggregator = NULL,
  get_position = position,
  material = TRUE,
  tooltip = FALSE
)
}
\arguments{
\item{rdeck}{\code{rdeck}
An rdeck map}

\item{...}{additional deck.gl layer parameters}

\item{id}{\code{character}
The id of the layer. Layer ids must be unique per layer \code{type} for deck.gl
to properly distinguish between them.}

\item{data}{\code{data.frame} | \code{sf::sf}
Deck.gl layer data, either a \link{data.frame} or \link[sf:sf]{sf::sf}.}

\item{visible}{\code{logical}
Whether the layer is visible.}

\item{pickable}{\code{logical}
Whether the layer responds to mouse pointer picking events.}

\item{opacity}{\code{numeric}
The opacity of the layer.}

\item{position_format}{\code{"XY"} | \code{"XYZ"}
Determines whether each coordinate has two (XY) or three (XYZ) numbers.}

\item{color_format}{\code{"RGB"} | \code{"RGBA"}
RGB will make the layer ignore the alpha channel of colours returned by
accessors. Opacity controlled by \code{opacity} is still applied.}

\item{auto_highlight}{\code{logical}
When \code{TRUE}, current object pointed by mouse pointer (when hovered over) is
highlighted with highlight_color. Requires \code{pickable} to be \code{TRUE}.}

\item{highlight_color}{\code{integer} vector of (R,G,B) or (R,G,B,A)
RGBA color to be used to render highlighted object. When 3 component (RGB)
array is specified, a default value of 255 is used for alpha.}

\item{color_domain}{\code{description-placeholder}}

\item{color_range}{\code{description-placeholder}}

\item{get_color_value}{\code{description-placeholder}}

\item{get_color_weight}{\code{description-placeholder}}

\item{color_aggregation}{\code{description-placeholder}}

\item{lower_percentile}{\code{description-placeholder}}

\item{upper_percentile}{\code{description-placeholder}}

\item{color_scale_type}{\code{description-placeholder}}

\item{elevation_domain}{\code{description-placeholder}}

\item{elevation_range}{\code{description-placeholder}}

\item{get_elevation_value}{\code{description-placeholder}}

\item{get_elevation_weight}{\code{description-placeholder}}

\item{elevation_aggregation}{\code{description-placeholder}}

\item{elevation_lower_percentile}{\code{description-placeholder}}

\item{elevation_upper_percentile}{\code{description-placeholder}}

\item{elevation_scale}{\code{description-placeholder}}

\item{elevation_scale_type}{\code{description-placeholder}}

\item{radius}{\code{description-placeholder}}

\item{coverage}{\code{description-placeholder}}

\item{extruded}{\code{description-placeholder}}

\item{hexagon_aggregator}{\code{description-placeholder}}

\item{get_position}{\code{description-placeholder}}

\item{material}{\code{description-placeholder}}

\item{tooltip}{\code{character} | \code{name}
Tooltip columns; either an expression returning a character vector, or an
expression to deparse. Example: \code{c(date, count, "a_literal")}}
}
\description{
HexagonLayer
}
\seealso{
\url{https://github.com/uber/deck.gl/blob/v8.1.1/docs/layers/hexagon-layer.md}

Other layers: 
\code{\link{arc_layer}},
\code{\link{bitmap_layer}},
\code{\link{column_layer}},
\code{\link{contour_layer}},
\code{\link{cpu_grid_layer}},
\code{\link{geojson_layer}},
\code{\link{gpu_grid_layer}},
\code{\link{great_circle_layer}},
\code{\link{grid_cell_layer}},
\code{\link{grid_layer}},
\code{\link{h3_cluster_layer}},
\code{\link{h3_hexagon_layer}},
\code{\link{heatmap_layer}},
\code{\link{icon_layer}},
\code{\link{line_layer}},
\code{\link{mvt_layer}},
\code{\link{path_layer}},
\code{\link{point_cloud_layer}},
\code{\link{polygon_layer}},
\code{\link{s2_layer}},
\code{\link{scatterplot_layer}},
\code{\link{scenegraph_layer}},
\code{\link{screen_grid_layer}},
\code{\link{simple_mesh_layer}},
\code{\link{solid_polygon_layer}},
\code{\link{terrain_layer}},
\code{\link{text_layer}},
\code{\link{tile3d_layer}},
\code{\link{tile_layer}},
\code{\link{trips_layer}}
}
\concept{layers}
